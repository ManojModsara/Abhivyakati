
@model QuizGame.Dto.AddEditBankAccountDto

@{
    ViewBag.Title = "Bank:CreateEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/select2/select2-bootstrap.css", "~/Content/select2/select2.css")


@using (Html.BeginForm("CreateEdit", "BankAccount", FormMethod.Post, new { @action = Url.Action("CreateEdit"), enctype = "multipart/form-data", @id = "model-AddEditBank-bankaccount" }))
{
    @Html.Partial("_Notification")
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.UserId)
    <section class="content-header">
        <h1>
            @(Model.Id == 0 ? "Add Bank Account" : "Edit Bank Account")
        </h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div id="validation-summary">

                </div>
                <div class="box">
                    <div class="box-body">

                        <div class="col-md-6">
                            <div class="box box-danger">
                                <div class="box-header">
                                    <h3 class="box-title">Account Info</h3>
                                </div>
                                <div class="box-body">
                                    <div class="form-group required">
                                        @Html.LabelFor(m => m.AccountNumber, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.AccountNumber, htmlAttributes: new { @class = "form-control ", @placeholder = "Account Number" })<!-- /.input group -->
                                        @Html.ValidationMessageFor(m => m.AccountNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group required">
                                        @Html.LabelFor(m => m.IFSCCode, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.IFSCCode, htmlAttributes: new { @class = "form-control ", @placeholder = "IFSC Code" })<!-- /.input group -->
                                        @Html.ValidationMessageFor(m => m.IFSCCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group required">
                                        @Html.LabelFor(m => m.AccountHolderName, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.AccountHolderName, htmlAttributes: new { @class = "form-control ", @placeholder = "Account Holder Name" })<!-- /.input group -->
                                        @Html.ValidationMessageFor(m => m.AccountHolderName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group ">
                                        @Html.LabelFor(m => m.UpiAddress, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.UpiAddress, htmlAttributes: new { @class = "form-control ", @placeholder = "Upi Adress" })<!-- /.input group -->

                                    </div>
                                    <div class="form-group required">
                                        @Html.LabelFor(m => m.AccountTypeId, new { @class = "control-label" })
                                        @Html.DropDownListFor(m => m.AccountTypeId, new SelectList(ViewBag.AccountTypes, "Id", "Name", @Model.AccountTypeId), "Select AccountType", new { @class = "form-control select2" })
                                        @Html.ValidationMessageFor(m => m.AccountTypeId, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="box box-danger">
                                <div class="box-header">
                                    <h3 class="box-title">Bank Details</h3>
                                </div>
                                <div class="box-body">

                                    @*<div class="form-group required">
            @Html.LabelFor(m => m.bankid, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.bankid, true, new SelectList(ViewBag.BankList, "Value", "Text", @Model.bankid), "Select a Bank", new { @class = "form-control select2" })
            @Html.ValidationMessageFor(m => m.bankid, "", new { @class = "text-danger" })
        </div>*@
                                    <div class="form-group required">
                                        @Html.LabelFor(m => m.BankName, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.BankName, htmlAttributes: new { @class = "form-control ", @placeholder = "Bank Name" })<!-- /.input group -->
                                        @Html.ValidationMessageFor(m => m.BankName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BranchName, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.BranchName, htmlAttributes: new { @class = "form-control ", @placeholder = "Branch Name" })<!-- /.input group -->
                                        @*@Html.ValidationMessageFor(m => m.BranchName, "", new { @class = "text-danger" })*@
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.BranchAddress, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.BranchAddress, htmlAttributes: new { @class = "form-control ", @placeholder = "Branch Address" })<!-- /.input group -->
                                        @*@Html.ValidationMessageFor(m => m.BranchAddress, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Remark, new { @class = "control-label" })
                                        @Html.TextBoxFor(m => m.Remark, htmlAttributes: new { @class = "form-control ", @placeholder = "Remark" })<!-- /.input group -->
                                        @*@Html.ValidationMessageFor(m => m.Remark, "", new { @class = "text-danger" })*@
                                    </div>
                                    @* <div class="form-group">
            @Html.LabelFor(m => m.BlockAmount, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.BlockAmount, htmlAttributes: new { @class = "form-control ", @placeholder = "Block Amount" })<!-- /.input group -->
        </div>*@
                                </div>
                            </div>
                        </div>
                    </div><!-- /.box-body -->
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="btn-mar pull-right">
                            <button class="btn btn-block btn-success"> Submit <i class="fa fa-arrow-circle-right"></i></button>
                        </div>
                        <div class="btn-mar pull-right">
                            <a class="btn btn-block btn-default" href="@Url.Action("Index")"><i class="fa fa-arrow-circle-left"></i> Cancel</a>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </section>
}
<script src="~/Scripts/jquery-3.4.1.slim.min.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>

@section scripts{
    @Scripts.Render("~/Scripts/Custom/bankaccount/addeditbank.js", "~/bundles/jqueryval", "~/bundles/select2")
}